@page "/signIn"
@layout BlankLayout
@inject HttpClient Http
@inject AuthService authService
@inject NavigationManager navigator

<div class="container">
  <div class="signIn">
    <ValidateForm Model="Model" @ref="Form" OnValidSubmit="@OnValidSubmit" style="width:100%">
      <div class="form-group">
        <BootstrapInput @bind-Value="@Model.Username" />
      </div>
      <div class="form-group ">
        <BootstrapInput type="password" @bind-Value="@Model.Password" />
      </div>
      <div class="form-group">
        <Button ButtonType="ButtonType.Submit" class="form-control" IsAsync="true" Text="登录" />
      </div>
    </ValidateForm>
  </div>


  <Button OnClick="Test"> 测试请求</Button>
</div>

@code {
  public SignInForm Model = new SignInForm();
  private ValidateForm Form { get; set; }

  async Task OnValidSubmit(EditContext context)
  {
    if (context.Validate())
    {

      var res = await Http.PostAsJsonAsync("/api/account/signIn", Model);
      if (res.IsSuccessStatusCode)
      {
        var dto = await res.Content.ReadFromJsonAsync<SignInDto>();
        // 保存到localStorage
        var userInfo = new LocalUserInfo(dto.Id, dto.Username, dto.Email, dto.RoleName, dto.Avatar);
        await authService.UpdateStateAsync(userInfo);
        // 更新token到请求
        authService.UpdateToken(dto.Token);
        navigator.NavigateTo("index");
      }
      else
      {
        System.Console.WriteLine(await res.Content.ReadAsStringAsync());
      }
    }
    else
    {

    }
  }

  async Task Test()
  {
    var res = await Http.PostAsJsonAsync("/api/account/filter", new AccountFilter
    {
      PageIndex = 1,
      PageSize = 12
    });
    if (res.IsSuccessStatusCode)
    {
      var data = res.Content.ReadFromJsonAsync<PageResult<AccountDto>>();

    }
  }

}
